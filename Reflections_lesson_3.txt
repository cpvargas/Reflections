When would you want to use a remote repository rather than keeping all your work local?

    When you want to share your work with others, or collaborate with other people.

When might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

    when you're working alone and you know the remote directory won't change
    unless you push

Describe the differences between forks, clones, and branches. When would you use one instead of another?

    Fork is a copy of a GitHub repository from some account to another, the copy can be modified
    because you have permission to do it, of course it doesn't change the original repository
    
    Cloning is copying a repository from GitHub to a local machine, or from a local machine to
    to local machine

    Branches are some sort of direction in a repository, the master branch is the main and 
    the base of other branches. 
    It can be seen as a tree the master branch would be the trunk, and the other branches
    limbs

    *** Need more reflection ***
    You're always using branches, you can push or pull your progress on some branch.
    If a change is made it has to be committed first and then pushed. Pulling is different
    from cloning, cloning is the first step to get the repo in a local machine pulling is
    a way to update.

What is the benefit of having a copy of the last known state of the remote stored locally?

    The main benefit is that we will know the difference between the last remote and changes
    pushed to GitHub and our changes that we couldnt/didnt push to GitHub but we made locally
    if we didn't have a different branch for local-remote sync it would be pretty difficult 
    to fix merging problems.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

    Collaboration could be done in a shared folder in dropbox for example or a shared document
    in google docs. It would be easier to make change in files but not at the same time, would
    be pretty hard or annoying to work at the same document or at the same time in the same files.

When would you want to make changes in a separate branch rather than directly in master? What
benefits does each approach have?

    You want to make changes in a separate branch When you aren't working alone, one benefit of 
    using branches is that everyone can rely on the master branch to implemment their changes,
    and no matter how much people are working on a project the changes will be made one by one
    on the master branch. If you're working alone and you're not making any experimental change
    working on the master branch is fine.
